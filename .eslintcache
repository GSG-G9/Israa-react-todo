[{"/home/israa/Israa-react-todo/src/index.js":"1","/home/israa/Israa-react-todo/src/App.js":"2","/home/israa/Israa-react-todo/src/components/TodoForm.js":"3","/home/israa/Israa-react-todo/src/components/EditTodoForm.js":"4","/home/israa/Israa-react-todo/src/components/TodoList.js":"5","/home/israa/Israa-react-todo/src/components/Todo.js":"6"},{"size":180,"mtime":1609351028991,"results":"7","hashOfConfig":"8"},{"size":2267,"mtime":1609445723899,"results":"9","hashOfConfig":"8"},{"size":1286,"mtime":1609447530710,"results":"10","hashOfConfig":"8"},{"size":706,"mtime":1609446330258,"results":"11","hashOfConfig":"8"},{"size":920,"mtime":1609444277518,"results":"12","hashOfConfig":"8"},{"size":1363,"mtime":1609447506297,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1iqr568",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/israa/Israa-react-todo/src/index.js",[],["29","30"],"/home/israa/Israa-react-todo/src/App.js",["31"],"import React from 'react'\nimport './App.css';\nimport {TodoForm} from './components/TodoForm'\nimport {TodoList} from './components/TodoList'\nimport {EditTodoForm} from './components/EditTodoForm'\n\nexport class App extends React.Component {\nstate ={\n  inputValue:'',\n  updatedValue:'',\n  todos :[],\n  edit :false,\n  todoStatus:'',\n  todoFiltered :[],\n  todoId :null,\n  todoText:''\n}\n\nsetTodoFiltered=(filtered)=>{\n  this.setState({todoFiltered:filtered})\n}\nsetTodoStatus=(status)=>{\nthis.setState({todoStatus:status})\n}\nsetInputValue=(input)=>{\n  this.setState({inputValue:input})\n}\nsetUpdatedValue=(input)=>{\n  this.setState({updatedValue:input})\n}\nsetTodos=(todo)=>{\nthis.setState({todos:todo})\n}\n\nsetEdit = (id,text)=>{\n  this.setState({edit:!this.state.edit , todoId:id,todoText:text})\n}\n\n handleSubmit=()=>{\n  console.log(this.state.todoId,this.state.updatedValue)\n\n  this.setTodos(this.state.todos.map((element)=>{\n      if(element.id === this.state.todoId){\n          // console.log({updatedValue})\n          return{\n              ...element,\n              text : this.state.updatedValue\n          }\n         \n      }\n     \n      return element;\n  }))\n  this.setUpdatedValue('')\n  \n  this.setEdit()\n \n  \n}\n\n\n\n  render=()=>{\n const {inputValue,todos,edit,updatedValue,todoStatus,todoId,todoText}=this.state;\n    return (\n      <div  className='todo-app'>\n        <h1>to-do app</h1>\n       \n        {\n          (!edit ?\n            (\n              <div>\n              <TodoForm inputValue={inputValue} setInputValue={this.setInputValue} todos={todos }\n               setTodos={this.setTodos} todoStatus={todoStatus} setTodoStatus={this.setTodoStatus}/>\n                  \n            <TodoList  inputValue={inputValue} setInputValue={this.setInputValue} todos={todos}  setTodos={this.setTodos} edit={edit} \n            setEdit={this.setEdit} todoStatus={todoStatus} \n            handleEdit={this.handleEdit}\n            updatedValue={updatedValue} setUpdatedValue={this.setUpdatedValue}/>  </div>)\n            :\n            <EditTodoForm handleSubmit={this.handleSubmit} setUpdatedValue={this.setUpdatedValue}\n            todoText={todoText}updatedValue={updatedValue}\n            />\n            )\n        }\n       \n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","/home/israa/Israa-react-todo/src/components/TodoForm.js",[],"/home/israa/Israa-react-todo/src/components/EditTodoForm.js",[],"/home/israa/Israa-react-todo/src/components/TodoList.js",["32","33"],"import React from 'react';\nimport {Todo} from './Todo'\n\n\n\nexport const TodoList=({todos,todoStatus,setTodos,edit,setEdit,inputValue,setInputValue,updatedValue,setUpdatedValue})=>{\n\n    let filtered =  todos.filter((todo)=>{\n        if(todoStatus==='')\n        return todo\n        else if(todo.completed === true && todoStatus=== \"true\"){\n            return todo\n        }\n        else if(todo.completed === false && todoStatus=== \"false\"){\n            return todo\n        }\n       \n       \n     })\n     \n     \nreturn(\n    <ul>\n        {\n           \n          \n           \n            filtered.map((todo)=>(\n                 console.log(todo),\n                <Todo text={todo.text} key={todo.id} todo={todo} todos={todos}  setTodos={setTodos}\n                setEdit={setEdit}\n                inputValue={inputValue} setInputValue={setInputValue}\n               \n                />\n            ))\n        }\n    </ul>\n)\n}","/home/israa/Israa-react-todo/src/components/Todo.js",["34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":64,"column":55,"nodeType":"41","messageId":"42","endLine":64,"endColumn":61},{"ruleId":"43","severity":1,"message":"44","line":8,"column":40,"nodeType":"45","messageId":"46","endLine":8,"endColumn":42},{"ruleId":"47","severity":1,"message":"48","line":29,"column":35,"nodeType":"49","messageId":"50","endLine":29,"endColumn":36},{"ruleId":"39","severity":1,"message":"51","line":7,"column":9,"nodeType":"41","messageId":"42","endLine":7,"endColumn":21},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'todoId' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'EditTodoForm' is defined but never used.","no-global-assign","no-unsafe-negation"]